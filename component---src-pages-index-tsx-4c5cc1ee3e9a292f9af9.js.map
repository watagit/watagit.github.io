{"version":3,"sources":["webpack:///./src/components/ui/Button/styles.ts","webpack:///./src/components/ui/Button/index.tsx","webpack:///./src/components/ui/Banner/styles.ts","webpack:///./src/components/ui/Banner/index.tsx","webpack:///./src/components/HeroBanner/index.tsx","webpack:///./src/components/Services/styles.ts","webpack:///./src/components/Services/index.tsx","webpack:///./src/pages/index.tsx"],"names":["Button","motion","custom","styled","button","primary","block","children","whileHover","scale","whileTap","Banner","section","Content","p","title","subtitle","content","linkTo","linkText","Container","TitleSection","to","HeroBanner","heroBanner","useStaticQuery","markdownRemark","frontmatter","Services","div","ServiceItem","allMarkdownRemark","sectionTitle","services","edges","center","map","item","node","id","icon","description","key","InfoBlock","IndexPage","Layout","SEO"],"mappings":"wLASaA,E,UAASC,EAAOC,OAAOC,IAAOC,OAArB,qEAAcD,CAAd,yCAEhB,mKAEF,qBAAGE,QAA2B,4BAAkB,qBAEhD,qBAAGC,OAAuB,mBCDfN,EANiE,SAAC,GAAD,IAAGK,EAAH,EAAGA,QAASC,EAAZ,EAAYA,MAAOC,EAAnB,EAAmBA,SAAnB,OAC9E,kBAAC,EAAD,CAAeF,QAASA,EAASC,MAAOA,EAAOE,WAAY,CAAEC,MAAO,MAAQC,SAAU,CAAED,MAAO,MAC5FF,I,YCPQI,EAASR,IAAOS,QAAV,oEAAGT,CAAH,SACb,2EAGOU,EAAUV,IAAOW,EAAV,qEAAGX,CAAH,SACd,uBCqBSQ,EAZiB,SAAC,GAAD,IAAGI,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAUC,EAApB,EAAoBA,QAASC,EAA7B,EAA6BA,OAAQC,EAArC,EAAqCA,SAArC,OAC9B,kBAAC,EAAD,KACE,kBAACC,EAAA,EAAD,CAAWR,SAAO,GAChB,kBAACS,EAAA,EAAD,CAAcN,MAAOA,EAAOC,SAAUA,IACtC,kBAAC,EAAD,KAAiBC,GACjB,kBAAC,OAAD,CAAMK,GAAIJ,GACR,kBAAC,EAAD,CAAQb,SAAO,GAAEc,OCkBVI,EA5Bc,WAAM,IAe3BC,EAdqBC,yBAAe,aAAlCC,eAc6CC,YAErD,OACE,kBAAC,EAAD,CACEZ,MAAOS,EAAWT,MAClBC,SAAUQ,EAAWR,SACrBC,QAASO,EAAWP,QACpBC,OAAQM,EAAWN,OACnBC,SAAUK,EAAWL,Y,YCjCdS,EAAWzB,IAAO0B,IAAV,sEAAG1B,CAAH,SACf,uEAGO2B,EAAc3B,IAAO0B,IAAV,yEAAG1B,CAAH,SAClB,0DC+DSyB,EAhDY,WAAM,MACeH,yBAAe,cAArDC,EADuB,EACvBA,eAAgBK,EADO,EACPA,kBAuBlBC,EAA6BN,EAAeC,YAC5CM,EAAsBF,EAAkBG,MAE9C,OACE,kBAACd,EAAA,EAAD,CAAWR,SAAO,GAChB,kBAACS,EAAA,EAAD,CAAcN,MAAOiB,EAAajB,MAAOC,SAAUgB,EAAahB,SAAUmB,QAAM,IAChF,kBAAC,EAAD,KACGF,EAASG,KAAI,SAACC,GAAS,MAIlBA,EAAKC,KAFPC,EAFoB,EAEpBA,GAFoB,IAGpBZ,YAAeZ,EAHK,EAGLA,MAAOyB,EAHF,EAGEA,KAAMC,EAHR,EAGQA,YAG9B,OACE,kBAAC,EAAD,CAAoBC,IAAKH,GACvB,kBAACI,EAAA,EAAD,CAAWH,KAAMA,EAAMzB,MAAOA,EAAOE,QAASwB,WC1C7CG,UAZa,WAC1B,OACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAK/B,MAAM,aACX,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA","file":"component---src-pages-index-tsx-4c5cc1ee3e9a292f9af9.js","sourcesContent":["import styled from 'styled-components';\nimport tw from 'tailwind.macro';\nimport { motion } from 'framer-motion';\n\nexport interface StyledProps {\n  primary?: boolean;\n  block?: boolean;\n}\n\nexport const Button = motion.custom(styled.button<StyledProps>`\n  outline: none !important;\n  ${tw`py-2 px-8 rounded-full border border-teal-300 text-indigo-900`};\n\n  ${({ primary }) => (primary ? tw`bg-teal-300` : tw`text-indigo-600`)};\n\n  ${({ block }) => block && tw`w-full`};\n`);\n","import React from 'react';\n\nimport * as Styled from './styles';\n\ninterface Props extends Styled.StyledProps {\n  children: React.ReactNode;\n}\n\nconst Button: React.FC<Props & React.ButtonHTMLAttributes<HTMLButtonElement>> = ({ primary, block, children }) => (\n  <Styled.Button primary={primary} block={block} whileHover={{ scale: 1.05 }} whileTap={{ scale: 0.95 }}>\n    {children}\n  </Styled.Button>\n);\n\nexport default Button;\n","import styled from 'styled-components';\nimport tw from 'tailwind.macro';\n\nexport const Banner = styled.section`\n  ${tw`bg-gray-100 border-b border-indigo-100 `};\n`;\n\nexport const Content = styled.p`\n  ${tw`mb-8`};\n`;\n","import React from 'react';\nimport { Link } from 'gatsby';\n\nimport Container from 'components/ui/Container';\nimport Button from 'components/ui/Button';\nimport TitleSection from 'components/ui/TitleSection';\n\nimport * as Styled from './styles';\n\ninterface Props {\n  title: string;\n  subtitle?: string;\n  content: React.ReactNode;\n  linkTo: string;\n  linkText: string;\n}\n\nconst Banner: React.FC<Props> = ({ title, subtitle, content, linkTo, linkText }) => (\n  <Styled.Banner>\n    <Container section>\n      <TitleSection title={title} subtitle={subtitle} />\n      <Styled.Content>{content}</Styled.Content>\n      <Link to={linkTo}>\n        <Button primary>{linkText}</Button>\n      </Link>\n    </Container>\n  </Styled.Banner>\n);\n\nexport default Banner;\n","import React from 'react';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nimport Banner from 'components/ui/Banner';\n\nimport { SectionTitle } from 'helpers/definitions';\n\ninterface SectionHeroBanner extends SectionTitle {\n  content: string;\n  linkTo: string;\n  linkText: string;\n}\n\nconst HeroBanner: React.FC = () => {\n  const { markdownRemark } = useStaticQuery(graphql`\n    query {\n      markdownRemark(frontmatter: { category: { eq: \"hero section\" } }) {\n        frontmatter {\n          title\n          subtitle\n          content\n          linkTo\n          linkText\n        }\n      }\n    }\n  `);\n\n  const heroBanner: SectionHeroBanner = markdownRemark.frontmatter;\n\n  return (\n    <Banner\n      title={heroBanner.title}\n      subtitle={heroBanner.subtitle}\n      content={heroBanner.content}\n      linkTo={heroBanner.linkTo}\n      linkText={heroBanner.linkText}\n    />\n  );\n};\n\nexport default HeroBanner;\n","import styled from 'styled-components';\nimport tw from 'tailwind.macro';\n\nexport const Services = styled.div`\n  ${tw`flex flex-wrap mx-auto`};\n`;\n\nexport const ServiceItem = styled.div`\n  ${tw`w-full sm:w-1/2`};\n`;\n","import React from 'react';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nimport InfoBlock from 'components/ui/InfoBlock';\nimport Container from 'components/ui/Container';\nimport TitleSection from 'components/ui/TitleSection';\nimport { IconProps } from 'components/ui/Icon';\n\nimport { SectionTitle } from 'helpers/definitions';\n\nimport * as Styled from './styles';\n\ninterface Service {\n  node: {\n    id: string;\n    frontmatter: {\n      title: string;\n      icon: IconProps;\n      description: string;\n    };\n  };\n}\n\nconst Services: React.FC = () => {\n  const { markdownRemark, allMarkdownRemark } = useStaticQuery(graphql`\n    query {\n      markdownRemark(frontmatter: { category: { eq: \"services section\" } }) {\n        frontmatter {\n          title\n          subtitle\n        }\n      }\n      allMarkdownRemark(filter: { frontmatter: { category: { eq: \"services\" } } }, sort: { fields: fileAbsolutePath }) {\n        edges {\n          node {\n            id\n            frontmatter {\n              title\n              icon\n              description\n            }\n          }\n        }\n      }\n    }\n  `);\n\n  const sectionTitle: SectionTitle = markdownRemark.frontmatter;\n  const services: Service[] = allMarkdownRemark.edges;\n\n  return (\n    <Container section>\n      <TitleSection title={sectionTitle.title} subtitle={sectionTitle.subtitle} center />\n      <Styled.Services>\n        {services.map((item) => {\n          const {\n            id,\n            frontmatter: { title, icon, description }\n          } = item.node;\n\n          return (\n            <Styled.ServiceItem key={id}>\n              <InfoBlock icon={icon} title={title} content={description} />\n            </Styled.ServiceItem>\n          );\n        })}\n      </Styled.Services>\n    </Container>\n  );\n};\n\nexport default Services;\n","import React from 'react';\n\nimport Layout from 'components/Layout';\nimport SEO from 'components/SEO';\nimport HeroBanner from 'components/HeroBanner';\nimport Services from 'components/Services';\n// import Testimonials from 'components/Testimonials';\n\nconst IndexPage: React.FC = () => {\n  return (\n    <Layout>\n      <SEO title=\"About Me\" />\n      <HeroBanner />\n      <Services />\n      <hr />\n      {/*<Testimonials />*/}\n    </Layout>\n  );\n};\n\nexport default IndexPage;\n"],"sourceRoot":""}